openapi: 3.0.1
info:
  title: InventoryApi
  version: v1
paths:
  /Audits:
    get:
      tags:
        - Audits
      summary: Fetches audit records based on the search criteria.
      parameters:
        - name: Offset
          in: query
          description: Gets or sets number of records to skip.
          schema:
            type: integer
            description: Gets or sets number of records to skip.
            format: int32
        - name: Limit
          in: query
          description: Gets or sets maximum number of records to return.
          schema:
            type: integer
            description: Gets or sets maximum number of records to return.
            format: int32
        - name: SkuId
          in: query
          description: Gets or sets the SkuId filter.
          schema:
            type: integer
            description: Gets or sets the SkuId filter.
            format: int64
        - name: OwnerId
          in: query
          description: Gets or sets the OwnerId filter.
          schema:
            type: integer
            description: Gets or sets the OwnerId filter.
            format: int64
        - name: CategoryId
          in: query
          description: Gets or sets the CategoryId filter.
          schema:
            type: integer
            description: Gets or sets the CategoryId filter.
            format: int32
        - name: ProductId
          in: query
          description: Gets or sets the ProductId filter.
          schema:
            type: integer
            description: Gets or sets the ProductId filter.
            format: int64
        - name: UserId
          in: query
          description: Gets or sets the UserIds that made the update.
          schema:
            type: array
            items:
              type: integer
              format: int64
            description: Gets or sets the UserIds that made the update.
        - name: ChannelId
          in: query
          description: Gets or sets the ChannelId.
          schema:
            type: integer
            description: Gets or sets the ChannelId.
            format: int32
        - name: ConditionId
          in: query
          description: Gets or sets conditionIds to filter by in search.
          schema:
            type: array
            items:
              type: integer
              format: int32
            description: Gets or sets conditionIds to filter by in search.
        - name: VariantId
          in: query
          description: Gets or sets variantId to filter by in search.
          schema:
            type: integer
            description: Gets or sets variantId to filter by in search.
            format: int32
        - name: LanguageId
          in: query
          description: Gets or sets languageId to filter by in search.
          schema:
            type: integer
            description: Gets or sets languageId to filter by in search.
            format: int32
        - name: GroupId
          in: query
          description: Gets or sets setNameIds to filter by in search.
          schema:
            type: array
            items:
              type: integer
              format: int32
            description: Gets or sets setNameIds to filter by in search.
        - name: Tool
          in: query
          description: Gets or sets the tool responsible for the update.
          schema:
            type: string
            description: Gets or sets the tool responsible for the update.
        - name: Type
          in: query
          description: 'Gets or sets the property that was updated eg. Quantity, Price etc.'
          schema:
            type: string
            description: 'Gets or sets the property that was updated eg. Quantity, Price etc.'
        - name: StartDate
          in: query
          description: The StartDate for the date range requested.
          schema:
            type: string
            description: The StartDate for the date range requested.
            format: date-time
        - name: EndDate
          in: query
          description: The EndDate for the date range requested.
          schema:
            type: string
            description: The EndDate for the date range requested.
            format: date-time
      responses:
        '200':
          description: A valid set of audit records are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResponse'
              examples:
                Example 1:
                  value:
                    previousPage: ''
                    nextPage: 'https://inventoryApi.com/audit?Offset=2&Limit=2'
                    resultCount: 2
                    totalResults: 10
                    data:
                      - user: null
                        firstName: null
                        lastName: null
                        date: '2022-03-25T15:25:55.389296-04:00'
                        skuId: 0
                        category: null
                        group: null
                        product: Test Product 1
                        condition: null
                        variant: null
                        language: null
                        eventType: null
                        originalValue: null
                        newValue: null
                        tool: null
                        channel: null
                        customListingId: null
                        title: null
                      - user: null
                        firstName: null
                        lastName: null
                        date: '2022-03-30T12:25:55.3924419-04:00'
                        skuId: 0
                        category: null
                        group: null
                        product: Test Product 2
                        condition: null
                        variant: null
                        language: null
                        eventType: null
                        originalValue: null
                        newValue: null
                        tool: null
                        channel: null
                        customListingId: null
                        title: null
        '400':
          description: Input validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: No records found for search criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /Audits/options:
    get:
      tags:
        - Audits
      summary: Fetches audit options based on the given search criteria.
      parameters:
        - name: OptionType
          in: query
          description: 'The type of options being requested. Valid values: Sku, Owner, Category, User, Channel, Condition, Variant, Language, Group, Tool, Type.'
          schema:
            type: string
            description: 'The type of options being requested. Valid values: Sku, Owner, Category, User, Channel, Condition, Variant, Language, Group, Tool, Type.'
        - name: SkuId
          in: query
          description: Gets or sets the SkuId filter.
          schema:
            type: integer
            description: Gets or sets the SkuId filter.
            format: int64
        - name: OwnerId
          in: query
          description: Gets or sets the OwnerId filter.
          schema:
            type: integer
            description: Gets or sets the OwnerId filter.
            format: int64
        - name: CategoryId
          in: query
          description: Gets or sets the CategoryId filter.
          schema:
            type: integer
            description: Gets or sets the CategoryId filter.
            format: int32
        - name: ProductId
          in: query
          description: Gets or sets the ProductId filter.
          schema:
            type: integer
            description: Gets or sets the ProductId filter.
            format: int64
        - name: UserId
          in: query
          description: Gets or sets the UserIds that made the update.
          schema:
            type: array
            items:
              type: integer
              format: int64
            description: Gets or sets the UserIds that made the update.
        - name: ChannelId
          in: query
          description: Gets or sets the ChannelId.
          schema:
            type: integer
            description: Gets or sets the ChannelId.
            format: int32
        - name: ConditionId
          in: query
          description: Gets or sets conditionIds to filter by in search.
          schema:
            type: array
            items:
              type: integer
              format: int32
            description: Gets or sets conditionIds to filter by in search.
        - name: VariantId
          in: query
          description: Gets or sets variantId to filter by in search.
          schema:
            type: integer
            description: Gets or sets variantId to filter by in search.
            format: int32
        - name: LanguageId
          in: query
          description: Gets or sets languageId to filter by in search.
          schema:
            type: integer
            description: Gets or sets languageId to filter by in search.
            format: int32
        - name: GroupId
          in: query
          description: Gets or sets setNameIds to filter by in search.
          schema:
            type: array
            items:
              type: integer
              format: int32
            description: Gets or sets setNameIds to filter by in search.
        - name: Tool
          in: query
          description: Gets or sets the tool responsible for the update.
          schema:
            type: string
            description: Gets or sets the tool responsible for the update.
        - name: Type
          in: query
          description: 'Gets or sets the property that was updated eg. Quantity, Price etc.'
          schema:
            type: string
            description: 'Gets or sets the property that was updated eg. Quantity, Price etc.'
        - name: StartDate
          in: query
          description: The StartDate for the date range requested.
          schema:
            type: string
            description: The StartDate for the date range requested.
            format: date-time
        - name: EndDate
          in: query
          description: The EndDate for the date range requested.
          schema:
            type: string
            description: The EndDate for the date range requested.
            format: date-time
      responses:
        '200':
          description: A valid set of audit options are returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResponse'
              examples:
                Example 1:
                  value:
                    previousPage: ''
                    nextPage: 'https://inventoryApi.com/audit?Offset=2&Limit=2'
                    resultCount: 2
                    totalResults: 10
                    data:
                      - user: null
                        firstName: null
                        lastName: null
                        date: '2022-03-25T15:25:55.4772322-04:00'
                        skuId: 0
                        category: null
                        group: null
                        product: Test Product 1
                        condition: null
                        variant: null
                        language: null
                        eventType: null
                        originalValue: null
                        newValue: null
                        tool: null
                        channel: null
                        customListingId: null
                        title: null
                      - user: null
                        firstName: null
                        lastName: null
                        date: '2022-03-30T12:25:55.4772338-04:00'
                        skuId: 0
                        category: null
                        group: null
                        product: Test Product 2
                        condition: null
                        variant: null
                        language: null
                        eventType: null
                        originalValue: null
                        newValue: null
                        tool: null
                        channel: null
                        customListingId: null
                        title: null
        '400':
          description: Input validation errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: No options found for the selected search options.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/Jobs/status/{jobId}':
    get:
      tags:
        - Jobs
      summary: "Returns a summary containing the status of a job\r\nusing the jobId specified."
      operationId: InventoryJobStatus
      parameters:
        - name: jobId
          in: path
          description: A jobId string.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusDto'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/Owners/{ownerId}/channels':
    get:
      tags:
        - Owners
      summary: Get an Owner's current Channel Priority settings.
      parameters:
        - name: ownerId
          in: path
          description: The OwnerId.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelPriority'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Owners
      summary: Set an Owner's Channel Priority settings.
      parameters:
        - name: ownerId
          in: path
          description: The OwnerId.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The Owner's full Channel Priority settings.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ChannelPriority'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ChannelPriority'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ChannelPriority'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/Owners/{ownerId}/skus':
    delete:
      tags:
        - Owners
      summary: Clear an Owner's entire Inventory.
      parameters:
        - name: ownerId
          in: path
          description: The OwnerId.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      deprecated: true
  '/v{version}/Owners/{ownerId}/skus':
    delete:
      tags:
        - Owners
      summary: "Clear an Owner's entire Inventory.\r\nImproves on the performance of the original\r\nversion of this endpoint by using deferred execution."
      parameters:
        - name: ownerId
          in: path
          description: The OwnerId.
          required: true
          schema:
            type: integer
            format: int64
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearInventoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/Skus/availability/channels/{channelId}':
    post:
      tags:
        - Skus
      summary: 'Returns the current availability for each SKU and Owner pair, for the requested Channel.'
      parameters:
        - name: channelId
          in: path
          description: The ChannelId to query.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: List of SKU / Owner pairs to query.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OwnerSku'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OwnerSku'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OwnerSku'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkuPrice'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /Skus/adjust-quantities:
    post:
      tags:
        - Skus
      summary: 'Adjust TotalInStock for the given Skus by the specified Quantity Delta for each, bypassing the PQS.'
      parameters:
        - name: origin
          in: query
          description: Optional parameter that allows specifying an Origin for the updates.
          schema:
            type: string
            default: skus/adjust-quantities
        - name: userId
          in: query
          description: The UserId associated with these quantity adjustments.
          schema:
            type: integer
            format: int64
            default: 0
        - name: Idempotency-Key
          in: header
          description: Optional parameter to enable Idempotency by returning cached responses for duplicate requests.
          schema:
            type: string
      requestBody:
        description: List of SKU Quantity Adjustments.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuQuantityAdjustment'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuQuantityAdjustment'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuQuantityAdjustment'
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /Skus/set-quantities:
    post:
      tags:
        - Skus
      summary: 'Set TotalInStock for the given Skus to the specified Quantity for each, bypassing the PQS.'
      parameters:
        - name: origin
          in: query
          description: Optional parameter that allows specifying an Origin for the updates.
          schema:
            type: string
            default: skus/set-quantities
        - name: Idempotency-Key
          in: header
          description: Optional parameter to enable Idempotency by returning cached responses for duplicate requests.
          schema:
            type: string
      requestBody:
        description: List of SKU Quantity Updates.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuQuantityUpdate'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuQuantityUpdate'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkuQuantityUpdate'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    AuditResponse:
      type: object
      properties:
        previousPage:
          type: string
          nullable: true
        nextPage:
          type: string
          nullable: true
        resultCount:
          type: integer
          format: int64
        totalResults:
          type: integer
          format: int64
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/InventoryChangeDto'
          nullable: true
          readOnly: true
      additionalProperties: false
    ChannelPriority:
      type: object
      properties:
        channelId:
          type: integer
          format: int32
        priority:
          type: integer
          format: int32
      additionalProperties: false
    ClearInventoryResponse:
      type: object
      properties:
        href:
          type: string
          nullable: true
      additionalProperties: false
    InventoryChangeDto:
      type: object
      properties:
        user:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        skuId:
          type: integer
          format: int64
        category:
          type: string
          nullable: true
        group:
          type: string
          nullable: true
        product:
          type: string
          nullable: true
        condition:
          type: string
          nullable: true
        variant:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        eventType:
          type: string
          nullable: true
        originalValue:
          type: string
          nullable: true
        newValue:
          type: string
          nullable: true
        tool:
          type: string
          nullable: true
        channel:
          type: string
          nullable: true
        customListingId:
          type: integer
          format: int64
          nullable: true
        title:
          type: string
          nullable: true
      additionalProperties: false
    JobStatusDto:
      type: object
      properties:
        status:
          type: string
          nullable: true
        createDate:
          type: string
          format: date-time
      additionalProperties: false
    OwnerSku:
      type: object
      properties:
        ownerId:
          type: integer
          format: int64
        skuId:
          type: integer
          format: int64
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    SkuPrice:
      type: object
      properties:
        ownerId:
          type: integer
          description: The OwnerId to whom the SKU belongs.
          format: int64
        skuId:
          type: integer
          description: The Id of the SKU.
          format: int64
        channelId:
          type: integer
          description: The ChannelId on which this SKU is available.
          format: int32
        price:
          type: number
          description: The current Price for this SKU on the specified Channel.
          format: double
        availableQuantity:
          type: integer
          description: The current available Quantity for this SKU on the specified Channel.
          format: int32
        reserveQuantity:
          type: integer
          description: The Owner's configured Reserve Quantity for this SKU on the specified Channel.
          format: int32
        timestamp:
          type: string
          description: The timestamp as of which this data was current.
          format: date-time
      additionalProperties: false
    SkuQuantityAdjustment:
      type: object
      properties:
        ownerId:
          type: integer
          format: int64
        skuId:
          type: integer
          format: int64
        quantityDelta:
          type: integer
          format: int32
      additionalProperties: false
    SkuQuantityUpdate:
      type: object
      properties:
        ownerId:
          type: integer
          format: int64
        skuId:
          type: integer
          format: int64
        totalInStock:
          type: integer
          format: int32
        updatedByUserId:
          type: integer
          format: int64
      additionalProperties: false
